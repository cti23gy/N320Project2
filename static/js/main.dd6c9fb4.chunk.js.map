{"version":3,"sources":["logo.svg","EnemyList/EnemyItem.js","EnemyList/PlayWidget.js","EnemyList/EnemyModal.js","EnemyList/EnemyList.js","App.js","reportWebVitals.js","index.js"],"names":["EnemyItem","props","Grid","List","ListItem","class","src","item","image","name","Button","variant","color","onClick","showInfo","id","PlayWidget","audioRef","useRef","controls","ref","currentItem","music","onPlay","ai","setInterval","progress","current","currentTime","duration","setCurProgress","setAudInterval","onPause","clearInterval","audInterval","EnemyModal","type","description","weakness","selectedItem","level","hp","pp","offense","defense","iq","speed","EnemyList","useState","items","setItems","selectItem","showModal","setModalOpen","useEffect","fetch","then","res","json","dataObject","stats","join","split","pop","error","itemsList","map","itemId","Modal","className","open","onClose","container","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd6c9fb4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport { Button, ListItem, List, Modal, Grid } from \"@material-ui/core\";\r\n\r\nexport default function EnemyItem(props) {\r\n  return ( \r\n  <div>\r\n    <Grid>\r\n          <List>\r\n            <ListItem class=\"itemholder\">\r\n              <img src={props.item.image} />\r\n                <div class=\"btnholder\">\r\n                  {props.item.name}\r\n                  \r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                      props.showInfo(props.item.id);\r\n                    }}\r\n                  >\r\n                    Info\r\n                  </Button>\r\n                </div>\r\n            </ListItem>\r\n          </List>\r\n    </Grid>\r\n    \r\n  </div>\r\n    \r\n  );\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nexport default function PlayWidget(props) {\r\n  const audioRef = useRef();\r\n\r\n  return (\r\n    <div>\r\n      <audio\r\n        controls\r\n        ref={audioRef}\r\n        src={props.currentItem.music}\r\n        onPlay={() => {\r\n          let ai = setInterval(() => {\r\n            let progress =\r\n              audioRef.current.currentTime / audioRef.current.duration;\r\n\r\n            props.setCurProgress(progress);\r\n          }, 100);\r\n          props.setAudInterval(ai);\r\n        }}\r\n        onPause={() => {\r\n          clearInterval(props.audInterval);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport PlayWidget from \"./PlayWidget\";\r\nimport { Button, ListItem, List, Modal, Grid } from \"@material-ui/core\";\r\n\r\nexport default function EnemyModal(props) {\r\n  return ( \r\n    <div id=\"infobox\">\r\n        <div class=\"imgholder\">\r\n        <img src={props.image}/>\r\n        </div>\r\n        \r\n        <div class=\"section\">\r\n            <div class=\"header\">\r\n                <h3>{props.name}</h3>\r\n                <h4>{props.type}</h4>\r\n                <p>{props.description}</p>\r\n                <p>Weaknesses: {props.weakness}</p>\r\n                <br/>\r\n                <h4>Music Player</h4>\r\n                <p>{props.music}</p>\r\n                <PlayWidget currentItem={props.selectedItem} setCurProgress={props.setCurProgress} setAudInterval={props.setAudInterval}/>\r\n            </div>\r\n            <div class=\"stats\">\r\n                <p>Level: {props.level}</p>\r\n                <p>HP: {props.hp}</p>\r\n                <p>PP: {props.pp}</p>\r\n                <p>Offense: {props.offense}</p>\r\n                <p>Defense: {props.defense}</p>\r\n                <p>IQ: {props.iq}</p>\r\n                <p>Speed: {props.speed}</p>\r\n            </div>\r\n        </div>\r\n        \r\n        \r\n        \r\n    </div>\r\n    \r\n  );\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport EnemyItem from \"./EnemyItem\";\r\nimport EnemyModal from \"./EnemyModal\";\r\nimport PlayWidget from \"./PlayWidget\";\r\nimport { List, Modal, Grid } from \"@material-ui/core\";\r\n\r\nimport \"./styles.css\";\r\n\r\n\r\nexport default function EnemyList() {\r\n  const [items, setItems] = useState([]);\r\n  const [selectedItem, selectItem] = useState([]);\r\n  const [showModal, setModalOpen] = useState(false);\r\n  \r\n  const audioRef = useRef();\r\n  const [audInterval, setAudInterval] = useState(0);\r\n  const [curPlaying, setCurPlaying] = useState({});\r\n  const [curProgress, setCurProgress] = useState(0);\r\n  \r\n\r\n  //get json data\r\n  useEffect(() => {\r\n    fetch(\"data/enemies.json\")\r\n      .then((res) => res.json())\r\n      .then((dataObject) => {\r\n        setItems(dataObject);\r\n      });\r\n  }, []);\r\n\r\n  try { //must have variables defined up here to run properly\r\n    var name = selectedItem.name;\r\n    var type = selectedItem.type;\r\n    \r\n    //stats\r\n    var level = selectedItem.stats.level;\r\n    var hp = selectedItem.stats.hp;\r\n    var pp = selectedItem.stats.pp;\r\n    var offense = selectedItem.stats.offense;\r\n    var defense = selectedItem.stats.defense;\r\n    var iq = selectedItem.stats.iq;\r\n    var speed = selectedItem.stats.speed;\r\n    var weakness = selectedItem.stats.weakness.join(\", \");\r\n\r\n    var description = selectedItem.description;\r\n    var image = selectedItem.image;\r\n    var music = selectedItem.music.split(\"./music/\").pop(); //gets rid of a portion of the hyperlink\r\n\r\n    \r\n\r\n  } catch (error) {\r\n    //console.log(error);\r\n  }\r\n\r\n  const itemsList = items.map((item) => (\r\n    <EnemyItem\r\n      key=\"{item.id}\"\r\n      item={item}\r\n      showInfo={showInfo}\r\n    />\r\n  ));\r\n\r\n  function showInfo(itemId) {\r\n    selectItem(items[itemId]);\r\n    setModalOpen(true);\r\n  }\r\n\r\n  function trackSelected(id) {\r\n    const foundItem = items.find((item) => item.id == id);\r\n    setCurPlaying(foundItem);\r\n  }\r\n\r\n  \r\n  return (\r\n    <div class=\"maindiv\">\r\n      <Modal\r\n        className=\"modal\"\r\n        open={showModal}\r\n        onClose={() => {\r\n          setModalOpen(false);\r\n          clearInterval(audInterval);\r\n        }}\r\n      >\r\n        <EnemyModal\r\n          selectedItem={selectedItem}\r\n          name={name}\r\n          type={type}\r\n          level={level}\r\n          hp={hp}\r\n          pp={pp}\r\n          offense={offense}\r\n          defense={defense}\r\n          iq={iq}\r\n          speed={speed}\r\n          weakness={weakness}\r\n          description={description}\r\n          image={image}\r\n          music={music}\r\n          setCurProgress={setCurProgress}\r\n          setAudInterval={setAudInterval}\r\n        />\r\n      </Modal>\r\n      \r\n      <h1>MOTHER 3 BOSSES</h1>\r\n      <Grid container>\r\n        {itemsList}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","import logo from './logo.svg';\nimport './App.css';\n\nimport EnemyList from \"./EnemyList/EnemyList\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <EnemyList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}